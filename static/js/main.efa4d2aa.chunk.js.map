{"version":3,"sources":["logo.svg","components/Navbar.js","components/Text.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","useState","className","mode","href","title","type","id","abouttext","placeholder","class","onClick","togglemode","role","htmlfor","Text","text","setText","style","color","heading","onChange","event","target","value","showAlert","rows","backgroundColor","newtext","toUpperCase","toLowerCase","split","length","Alert","alert","msg","App","setstate","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.efa4d2aa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\r\nimport React ,{useState}from 'react'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  const[text,setText]= useState(\"ENABLE MODE \")\r\n  const change = ()=>{\r\n    if (props.mode=='light'){\r\n      setText(\"ENABLE DARK MODE\")\r\n    }\r\n    else {\r\n      setText(\"ENABLE LIGHT MODE\")\r\n    }\r\n  }\r\n  \r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className\r\n          =\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">{props.abouttext}</a>\r\n              </li>\r\n              \r\n            </ul>\r\n            <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n    </form>\r\n            <div class= \"form-check form-switch text-primary\" >\r\n              <input className=\"form-check-input\" onClick={props.togglemode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                 <label className=\"form-check-label\" htmlfor=\"flexSwitchCheckDefault\">ENABLE THE MODE</label>\r\n          </div>\r\n\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","import React,{useState} from 'react'\r\n\r\nexport default function Text(props) {\r\n  const[text,setText]= useState(\"Enter the text \")\r\n  const handleUpClcik=()=>{\r\n    \r\n    let newtext = text.toUpperCase()\r\n    setText(newtext)\r\n    props.showAlert(\"changed to uppercase\",\"danger\")\r\n\r\n\r\n  }\r\n  const handleOnchange=(event)=>{\r\n    \r\n    setText(event.target.value);\r\n    props.showAlert(\"TEXT changed\",\"succes\")\r\n  }\r\n  const handleDownClcik=()=>{\r\n    let newtext = text.toLowerCase()\r\n    setText(newtext)\r\n    props.showAlert(\"changed to lowercase\",\"danger\")\r\n  }\r\n\r\n    return (\r\n      <>\r\n        \r\n       \r\n        <div  className=\"new\" style={{color:props.mode==='light'?'black':'white'}}>\r\n          <h1 >{props.heading}</h1>   \r\n        <div className=\"mb-3\">\r\n  \r\n  <textarea className=\"form-control\"  onChange={handleOnchange} value = {text} id=\"exampleFormControlTextarea1\" rows=\"8\" style={{backgroundColor:props.mode==='light'?'white':'grey'}}></textarea>\r\n  <button className=\"btn\" onClick={handleUpClcik} class=\"btn btn-success\" > Convert to uppercase</button>\r\n  <button className=\"btn\" onClick={handleDownClcik} class=\"btn btn-success\" > Convert to lowercase</button>\r\n  \r\n</div>\r\n</div>\r\n         \r\n<div className=\"my container my-3\"style={{color:props.mode==='light'?'black':'white'}} >\r\n  <h1>\"Your text summary \"</h1>\r\n  <p>{text.split(\" \").length}words and {text.length}characters</p>\r\n  <p>{0.008*text.split(\" \").length}minutes to read</p>\r\n  \r\n</div>\r\n\r\n</>\r\n\r\n        \r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n\r\n       props.alert && <div>\r\n            <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{props.alert.msg}</strong>\r\n  <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import logo from './logo.svg';\nimport './App.css';\n\n\nimport Navbar from './components/Navbar';\nimport Text from './components/Text';\nimport About from './components/About';\nimport Alert from './components/Alert';\nimport React, { useState } from 'react';\n\n\nfunction App() {\n  const [mode, setstate] = useState('light') \n  const[alert,setAlert]= useState(null);\n  const showAlert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type \n\n\n     } )\n     setTimeout(()=>{\n       setAlert(null)\n     },2000)\n  }\n  const togglemode= ()=>{\n    if (mode ==\"light\"){\n    setstate(\"dark\")\n    document.body.style.backgroundColor= '#042743';\n    document.title=\"TEXTUTIL-DARK MODE\";\n    showAlert(\"DARK Mode enabled\",\"success\");\n    }\n    else {\n      setstate(\"light\")\n      document.title=\"TEXTUTIL-LIGHT MODE\";\n      document.body.style.backgroundColor='white';\n      showAlert(\"LIGHT Mode enabled\",\"success\");\n    }\n  }\n  return (\n    <>\n    \n  <Navbar title=\"text\" abouttext=\"about text\" mode = {mode} togglemode = {togglemode}/>\n  <Alert alert={alert}/>\n  <Text  heading=\"Enter the Text \" mode={mode}   showAlert={showAlert}/>\n  \n   \n\n\n  </>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}